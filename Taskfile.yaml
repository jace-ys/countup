---
version: '3'

vars:
  VERSION:
    sh: git describe --tags --exact-match HEAD 2>/dev/null || echo "0.0.0"
  GIT_COMMIT:
    sh: git rev-parse --short HEAD
  LDFLAGS:
  - '-X github.com/jace-ys/countup/internal/versioninfo.Version={{ .VERSION }}'
  - '-X github.com/jace-ys/countup/internal/versioninfo.CommitSHA={{ .GIT_COMMIT }}'

tasks:
  run:server:
    deps: ['gen']
    dir: app
    cmds:
    - go run ./cmd/countup/... server {{ .CLI_ARGS }}
    env:
      DEBUG: true
      OTEL_GO_X_EXEMPLAR: true
      OTEL_RESOURCE_ATTRIBUTES: tier=app,environment=local
      DATABASE_CONNECTION_URI: postgresql://countup:countup@localhost:5432/countup
      OAUTH_REDIRECT_URL: https://localhost:4043/login/google/callback

  run:client:
    deps: ['gen']
    dir: app
    cmds:
    - go run ./cmd/countup-cli/... {{ .CLI_ARGS }}

  test:
    deps: ['gen']
    dir: app
    cmds:
    - go test -race ./...

  lint:
    deps: ['gen']
    dir: app
    cmds:
    - golangci-lint run ./...

  gen:
    dir: app
    cmds:
    - task: gen:api:v1
    - task: gen:sqlc

  gen:api:*:
    internal: true
    dir: app
    vars:
      API_VERSION: '{{ index .MATCH 0 }}'
    cmds:
    - goa gen github.com/jace-ys/countup/api/{{ .API_VERSION }} -o api/{{ .API_VERSION }}
    sources:
    - api/{{ .API_VERSION }}/*.go
    generates:
    - api/{{ .API_VERSION }}/gen/**/*

  gen:sqlc:
    internal: true
    deps: ['migration:plan']
    dir: app
    cmds:
    - sqlc generate
    sources:
    - sqlc.yaml
    - schema/*.sql

  migration:new:
    dir: app
    cmds:
    - atlas migrate new --env local {{ .NAME }}
    requires:
      vars: [NAME]

  migration:plan:
    dir: app
    cmds:
    - atlas migrate diff --env local {{ .NAME }}
    sources:
    - schema/schema.sql
    - schema/migrations/*.sql
    generates:
    - schema/migrations/*.sql

  migration:checksum:
    dir: app
    cmds:
    - atlas migrate hash --env local

  build:
    deps: ['gen']
    dir: app
    cmds:
    - task: build:server
    - task: build:client
    - task: build:image

  build:server:
    internal: true
    dir: app
    cmds:
    - go build -ldflags='{{ .LDFLAGS | join " " }}' -o ./dist/ ./cmd/countup/...

  build:client:
    internal: true
    dir: app
    cmds:
    - go build -ldflags='{{ .LDFLAGS | join " " }}' -o ./dist/ ./cmd/countup-cli/...

  build:image:
    internal: true
    dir: app
    cmds:
    - docker build --build-arg LDFLAGS='{{ .LDFLAGS | join " " }}' -t jace-ys/countup:{{ .VERSION }} .

  certs:traefik:
    dir: infra/environments/local/compose/traefik/certs
    cmds:
    - mkcert -install
    - mkcert -cert-file traefik.cert -key-file traefik.key localhost 127.0.0.1 ::1
    status:
    - test -f traefik.cert
    - test -f traefik.key

  compose:
    ignore_error: true
    deps: ['gen', 'certs:traefik']
    cmds:
    - docker compose --profile apps up --build {{ .CLI_ARGS }}
    - defer: {task: 'compose:down'}

  compose:infra:
    ignore_error: true
    deps: ['gen', 'certs:traefik']
    cmds:
    - docker compose up {{ .CLI_ARGS }}
    - defer: {task: 'compose:down'}

  compose:down:
    ignore_error: true
    cmds:
    - docker compose down -v --remove-orphans

  spacelift:init:
    dir: infra/spacelift/init
    cmds:
    - tofu apply
