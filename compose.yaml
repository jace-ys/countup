name: countup

services:
  countup:
    image: jace-ys/countup:0.0.0
    build:
      context: ./app
    profiles: [ apps ]
    ports:
    - 8080:8080
    - 8081:8081
    - 9090:9090
    command:
    - server
    depends_on:
      postgres:
        condition: service_healthy
      postgres-init:
        condition: service_completed_successfully
      otel-collector:
        condition: service_started
    environment:
      OTEL_GO_X_EXEMPLAR: true
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
      DATABASE_CONNECTION_URI: postgresql://countup:countup@postgres:5432/countup
      OAUTH_CLIENT_ID: ${OAUTH_CLIENT_ID}
      OAUTH_CLIENT_SECRET: ${OAUTH_CLIENT_SECRET}
      OAUTH_REDIRECT_URL: http://localhost:8080/login/google/callback

  postgres:
    image: postgres:15.8-alpine@sha256:8b963ea3038c3b32182ee7f592ccde21242fa7c5fd9d1b72aa333c27f1bfc809
    ports:
    - 5432:5432
    environment:
      POSTGRES_USER: countup
      POSTGRES_PASSWORD: countup
      POSTGRES_DB: countup
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      retries: 3
      start_period: 10s
      timeout: 5s

  postgres-init:
    image: jace-ys/countup:0.0.0
    build:
      context: ./app
    command:
    - migrate
    - up
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_CONNECTION_URI: postgresql://countup:countup@postgres:5432/countup
      MIGRATIONS_DIR: /app/migrations
      MIGRATIONS_LOCALFS: true
    volumes:
    - ./app/schema/migrations:/app/migrations

  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:v0.15.0@sha256:386b12d19eab2a37d7cd8ca8b4c7491cc7a830d9581f49af6c98a393da9605e6
    ports:
    - 9187:9187
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATA_SOURCE_URI: postgres:5432/countup?sslmode=disable
      DATA_SOURCE_USER: countup
      DATA_SOURCE_PASS: countup

  grafana:
    image: grafana/grafana:11.1.4@sha256:886b56d5534e54f69a8cfcb4b8928da8fc753178a7a3d20c3f9b04b660169805
    ports:
    - 3000:3000
    command:
    - --config=/etc/grafana/config.ini
    volumes:
    - ./infra/environments/local/compose/grafana/config.ini:/etc/grafana/config.ini
    - ./infra/environments/local/compose/grafana/provisioning:/etc/grafana/provisioning
    - ./infra/environments/local/compose/grafana/definitions:/var/lib/grafana/dashboards
    environment:
    - GF_INSTALL_PLUGINS=https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.107.0@sha256:b65527791431d76d058b2813748a3f4a8912540d7b23beac2f6b4e02c872f5b7
    user: '0'
    ports:
    - 4317:4317
    - 8888:8888
    command:
    - --config=/etc/otel-collector/config.yaml
    depends_on:
      mimir:
        condition: service_started
      tempo:
        condition: service_started
      loki:
        condition: service_started
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - ./infra/environments/local/compose/otel-collector/config.yaml:/etc/otel-collector/config.yaml

  promtail:
    image: grafana/promtail:3.1.1@sha256:48fba41d9f08c6a56a85b078529dc8550a1809d3e7a9674982e9e9bfbdc854c1
    ports:
    - 3080:3080
    command:
    - -config.file=/etc/promtail/config.yaml
    depends_on:
      loki:
        condition: service_started
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - ./infra/environments/local/compose/promtail/config.yaml:/etc/promtail/config.yaml

  loki:
    image: grafana/loki:3.1.1@sha256:e689cc634841c937de4d7ea6157f17e29cf257d6a320f1c293ab18d46cfea986
    command:
    - -config.file=/etc/loki/config.yaml
    ports:
    - 3100:3100
    volumes:
    - ./infra/environments/local/compose/loki/config.yaml:/etc/loki/config.yaml

  tempo:
    image: grafana/tempo:2.5.0@sha256:f0200a9bff6d14eb3a4332194f7b77c37ee1a3535e7e41db024d95aab6f1b4e8
    ports:
    - 3200:3200
    command:
    - -config.file=/etc/tempo/config.yaml
    volumes:
    - ./infra/environments/local/compose/tempo/config.yaml:/etc/tempo/config.yaml

  mimir:
    image: grafana/mimir:2.16.0@sha256:f5850c2fd0d872fc029378558765aa79c4be66a5fca0d8c6bf0fc30971484555
    command:
    - -ingester.native-histograms-ingestion-enabled=true
    - -config.file=/etc/mimir/config.yaml
    ports:
    - 3300:3300
    volumes:
    - ./infra/environments/local/compose/mimir/config.yaml:/etc/mimir/config.yaml
