// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: scores.sql

package scorestore

import (
	"context"
)

const insertScore = `-- name: InsertScore :exec
INSERT INTO scores (user_email, score)
VALUES ($1, $2)
`

type InsertScoreParams struct {
	UserEmail string
	Score     int32
}

func (q *Queries) InsertScore(ctx context.Context, db DBTX, arg InsertScoreParams) error {
	_, err := db.Exec(ctx, insertScore, arg.UserEmail, arg.Score)
	return err
}

const listScores = `-- name: ListScores :many
SELECT user_email, score
FROM scores
`

func (q *Queries) ListScores(ctx context.Context, db DBTX) ([]Score, error) {
	rows, err := db.Query(ctx, listScores)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Score
	for rows.Next() {
		var i Score
		if err := rows.Scan(&i.UserEmail, &i.Score); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
