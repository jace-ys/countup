// Code generated by goa v3.19.1, DO NOT EDIT.
//
// web client
//
// Command:
// $ goa gen github.com/jace-ys/countup/api/v1 -o api/v1

package web

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "web" service client.
type Client struct {
	IndexEndpoint   goa.Endpoint
	AnotherEndpoint goa.Endpoint
}

// NewClient initializes a "web" service client given the endpoints.
func NewClient(index, another goa.Endpoint) *Client {
	return &Client{
		IndexEndpoint:   index,
		AnotherEndpoint: another,
	}
}

// Index calls the "index" endpoint of the "web" service.
func (c *Client) Index(ctx context.Context) (res []byte, err error) {
	var ires any
	ires, err = c.IndexEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]byte), nil
}

// Another calls the "another" endpoint of the "web" service.
func (c *Client) Another(ctx context.Context) (res []byte, err error) {
	var ires any
	ires, err = c.AnotherEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]byte), nil
}
