// Code generated by goa v3.21.0, DO NOT EDIT.
//
// web endpoints
//
// Command:
// $ goa gen github.com/jace-ys/countup/api/v1 -o api/v1

package web

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "web" service endpoints.
type Endpoints struct {
	Index               goa.Endpoint
	Another             goa.Endpoint
	LoginGoogle         goa.Endpoint
	LoginGoogleCallback goa.Endpoint
	Logout              goa.Endpoint
	SessionToken        goa.Endpoint
}

// NewEndpoints wraps the methods of the "web" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Index:               NewIndexEndpoint(s),
		Another:             NewAnotherEndpoint(s),
		LoginGoogle:         NewLoginGoogleEndpoint(s),
		LoginGoogleCallback: NewLoginGoogleCallbackEndpoint(s),
		Logout:              NewLogoutEndpoint(s),
		SessionToken:        NewSessionTokenEndpoint(s),
	}
}

// Use applies the given middleware to all the "web" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Index = m(e.Index)
	e.Another = m(e.Another)
	e.LoginGoogle = m(e.LoginGoogle)
	e.LoginGoogleCallback = m(e.LoginGoogleCallback)
	e.Logout = m(e.Logout)
	e.SessionToken = m(e.SessionToken)
}

// NewIndexEndpoint returns an endpoint function that calls the method "Index"
// of service "web".
func NewIndexEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.Index(ctx)
	}
}

// NewAnotherEndpoint returns an endpoint function that calls the method
// "Another" of service "web".
func NewAnotherEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.Another(ctx)
	}
}

// NewLoginGoogleEndpoint returns an endpoint function that calls the method
// "LoginGoogle" of service "web".
func NewLoginGoogleEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.LoginGoogle(ctx)
	}
}

// NewLoginGoogleCallbackEndpoint returns an endpoint function that calls the
// method "LoginGoogleCallback" of service "web".
func NewLoginGoogleCallbackEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*LoginGoogleCallbackPayload)
		return s.LoginGoogleCallback(ctx, p)
	}
}

// NewLogoutEndpoint returns an endpoint function that calls the method
// "Logout" of service "web".
func NewLogoutEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*LogoutPayload)
		return s.Logout(ctx, p)
	}
}

// NewSessionTokenEndpoint returns an endpoint function that calls the method
// "SessionToken" of service "web".
func NewSessionTokenEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*SessionTokenPayload)
		return s.SessionToken(ctx, p)
	}
}
