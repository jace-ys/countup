// Code generated by goa v3.19.1, DO NOT EDIT.
//
// web endpoints
//
// Command:
// $ goa gen github.com/jace-ys/countup/api/v1 -o api/v1

package web

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "web" service endpoints.
type Endpoints struct {
	Index   goa.Endpoint
	Another goa.Endpoint
}

// NewEndpoints wraps the methods of the "web" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Index:   NewIndexEndpoint(s),
		Another: NewAnotherEndpoint(s),
	}
}

// Use applies the given middleware to all the "web" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Index = m(e.Index)
	e.Another = m(e.Another)
}

// NewIndexEndpoint returns an endpoint function that calls the method "index"
// of service "web".
func NewIndexEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.Index(ctx)
	}
}

// NewAnotherEndpoint returns an endpoint function that calls the method
// "another" of service "web".
func NewAnotherEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.Another(ctx)
	}
}
