// Code generated by goa v3.19.1, DO NOT EDIT.
//
// api client
//
// Command:
// $ goa gen github.com/jace-ys/countup/api/v1 -o api/v1

package api

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "api" service client.
type Client struct {
	CounterGetEndpoint       goa.Endpoint
	CounterIncrementEndpoint goa.Endpoint
	EchoEndpoint             goa.Endpoint
}

// NewClient initializes a "api" service client given the endpoints.
func NewClient(counterGet, counterIncrement, echo goa.Endpoint) *Client {
	return &Client{
		CounterGetEndpoint:       counterGet,
		CounterIncrementEndpoint: counterIncrement,
		EchoEndpoint:             echo,
	}
}

// CounterGet calls the "CounterGet" endpoint of the "api" service.
// CounterGet may return the following errors:
//   - "unauthorized" (type *goa.ServiceError)
//   - "existing_increment_request" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) CounterGet(ctx context.Context) (res *CounterInfo, err error) {
	var ires any
	ires, err = c.CounterGetEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*CounterInfo), nil
}

// CounterIncrement calls the "CounterIncrement" endpoint of the "api" service.
// CounterIncrement may return the following errors:
//   - "unauthorized" (type *goa.ServiceError)
//   - "existing_increment_request" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) CounterIncrement(ctx context.Context, p *CounterIncrementPayload) (res *CounterInfo, err error) {
	var ires any
	ires, err = c.CounterIncrementEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CounterInfo), nil
}

// Echo calls the "Echo" endpoint of the "api" service.
// Echo may return the following errors:
//   - "unauthorized" (type *goa.ServiceError)
//   - "existing_increment_request" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) Echo(ctx context.Context, p *EchoPayload) (res *EchoResult, err error) {
	var ires any
	ires, err = c.EchoEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*EchoResult), nil
}
