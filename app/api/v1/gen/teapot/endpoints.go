// Code generated by goa v3.21.0, DO NOT EDIT.
//
// teapot endpoints
//
// Command:
// $ goa gen github.com/jace-ys/countup/api/v1 -o api/v1

package teapot

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "teapot" service endpoints.
type Endpoints struct {
	Echo goa.Endpoint
}

// NewEndpoints wraps the methods of the "teapot" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Echo: NewEchoEndpoint(s),
	}
}

// Use applies the given middleware to all the "teapot" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Echo = m(e.Echo)
}

// NewEchoEndpoint returns an endpoint function that calls the method "Echo" of
// service "teapot".
func NewEchoEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*EchoPayload)
		return s.Echo(ctx, p)
	}
}
