// Code generated by goa v3.19.1, DO NOT EDIT.
//
// api HTTP client types
//
// Command:
// $ goa gen github.com/jace-ys/countup/api/v1 -o api/v1

package client

import (
	api "github.com/jace-ys/countup/api/v1/gen/api"
	apiviews "github.com/jace-ys/countup/api/v1/gen/api/views"
	goa "goa.design/goa/v3/pkg"
)

// AuthTokenRequestBody is the type of the "api" service "AuthToken" endpoint
// HTTP request body.
type AuthTokenRequestBody struct {
	Provider    string `form:"provider" json:"provider" xml:"provider"`
	AccessToken string `form:"access_token" json:"access_token" xml:"access_token"`
}

// AuthTokenResponseBody is the type of the "api" service "AuthToken" endpoint
// HTTP response body.
type AuthTokenResponseBody struct {
	Token *string `form:"token,omitempty" json:"token,omitempty" xml:"token,omitempty"`
}

// CounterGetResponseBody is the type of the "api" service "CounterGet"
// endpoint HTTP response body.
type CounterGetResponseBody struct {
	Count           *int32  `form:"count,omitempty" json:"count,omitempty" xml:"count,omitempty"`
	LastIncrementBy *string `form:"last_increment_by,omitempty" json:"last_increment_by,omitempty" xml:"last_increment_by,omitempty"`
	LastIncrementAt *string `form:"last_increment_at,omitempty" json:"last_increment_at,omitempty" xml:"last_increment_at,omitempty"`
	NextFinalizeAt  *string `form:"next_finalize_at,omitempty" json:"next_finalize_at,omitempty" xml:"next_finalize_at,omitempty"`
}

// CounterIncrementResponseBody is the type of the "api" service
// "CounterIncrement" endpoint HTTP response body.
type CounterIncrementResponseBody struct {
	Count           *int32  `form:"count,omitempty" json:"count,omitempty" xml:"count,omitempty"`
	LastIncrementBy *string `form:"last_increment_by,omitempty" json:"last_increment_by,omitempty" xml:"last_increment_by,omitempty"`
	LastIncrementAt *string `form:"last_increment_at,omitempty" json:"last_increment_at,omitempty" xml:"last_increment_at,omitempty"`
	NextFinalizeAt  *string `form:"next_finalize_at,omitempty" json:"next_finalize_at,omitempty" xml:"next_finalize_at,omitempty"`
}

// AuthTokenUnauthenticatedResponseBody is the type of the "api" service
// "AuthToken" endpoint HTTP response body for the "unauthenticated" error.
type AuthTokenUnauthenticatedResponseBody struct {
	// Name is the name of this class of errors.
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
	// Is the error temporary?
	Temporary *bool `form:"temporary,omitempty" json:"temporary,omitempty" xml:"temporary,omitempty"`
	// Is the error a timeout?
	Timeout *bool `form:"timeout,omitempty" json:"timeout,omitempty" xml:"timeout,omitempty"`
	// Is the error a server-side fault?
	Fault *bool `form:"fault,omitempty" json:"fault,omitempty" xml:"fault,omitempty"`
}

// AuthTokenAccessDeniedResponseBody is the type of the "api" service
// "AuthToken" endpoint HTTP response body for the "access_denied" error.
type AuthTokenAccessDeniedResponseBody struct {
	// Name is the name of this class of errors.
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
	// Is the error temporary?
	Temporary *bool `form:"temporary,omitempty" json:"temporary,omitempty" xml:"temporary,omitempty"`
	// Is the error a timeout?
	Timeout *bool `form:"timeout,omitempty" json:"timeout,omitempty" xml:"timeout,omitempty"`
	// Is the error a server-side fault?
	Fault *bool `form:"fault,omitempty" json:"fault,omitempty" xml:"fault,omitempty"`
}

// CounterGetUnauthenticatedResponseBody is the type of the "api" service
// "CounterGet" endpoint HTTP response body for the "unauthenticated" error.
type CounterGetUnauthenticatedResponseBody struct {
	// Name is the name of this class of errors.
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
	// Is the error temporary?
	Temporary *bool `form:"temporary,omitempty" json:"temporary,omitempty" xml:"temporary,omitempty"`
	// Is the error a timeout?
	Timeout *bool `form:"timeout,omitempty" json:"timeout,omitempty" xml:"timeout,omitempty"`
	// Is the error a server-side fault?
	Fault *bool `form:"fault,omitempty" json:"fault,omitempty" xml:"fault,omitempty"`
}

// CounterGetAccessDeniedResponseBody is the type of the "api" service
// "CounterGet" endpoint HTTP response body for the "access_denied" error.
type CounterGetAccessDeniedResponseBody struct {
	// Name is the name of this class of errors.
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
	// Is the error temporary?
	Temporary *bool `form:"temporary,omitempty" json:"temporary,omitempty" xml:"temporary,omitempty"`
	// Is the error a timeout?
	Timeout *bool `form:"timeout,omitempty" json:"timeout,omitempty" xml:"timeout,omitempty"`
	// Is the error a server-side fault?
	Fault *bool `form:"fault,omitempty" json:"fault,omitempty" xml:"fault,omitempty"`
}

// CounterIncrementExistingIncrementRequestResponseBody is the type of the
// "api" service "CounterIncrement" endpoint HTTP response body for the
// "existing_increment_request" error.
type CounterIncrementExistingIncrementRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
	// Is the error temporary?
	Temporary *bool `form:"temporary,omitempty" json:"temporary,omitempty" xml:"temporary,omitempty"`
	// Is the error a timeout?
	Timeout *bool `form:"timeout,omitempty" json:"timeout,omitempty" xml:"timeout,omitempty"`
	// Is the error a server-side fault?
	Fault *bool `form:"fault,omitempty" json:"fault,omitempty" xml:"fault,omitempty"`
}

// CounterIncrementUnauthenticatedResponseBody is the type of the "api" service
// "CounterIncrement" endpoint HTTP response body for the "unauthenticated"
// error.
type CounterIncrementUnauthenticatedResponseBody struct {
	// Name is the name of this class of errors.
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
	// Is the error temporary?
	Temporary *bool `form:"temporary,omitempty" json:"temporary,omitempty" xml:"temporary,omitempty"`
	// Is the error a timeout?
	Timeout *bool `form:"timeout,omitempty" json:"timeout,omitempty" xml:"timeout,omitempty"`
	// Is the error a server-side fault?
	Fault *bool `form:"fault,omitempty" json:"fault,omitempty" xml:"fault,omitempty"`
}

// CounterIncrementAccessDeniedResponseBody is the type of the "api" service
// "CounterIncrement" endpoint HTTP response body for the "access_denied" error.
type CounterIncrementAccessDeniedResponseBody struct {
	// Name is the name of this class of errors.
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
	// Is the error temporary?
	Temporary *bool `form:"temporary,omitempty" json:"temporary,omitempty" xml:"temporary,omitempty"`
	// Is the error a timeout?
	Timeout *bool `form:"timeout,omitempty" json:"timeout,omitempty" xml:"timeout,omitempty"`
	// Is the error a server-side fault?
	Fault *bool `form:"fault,omitempty" json:"fault,omitempty" xml:"fault,omitempty"`
}

// NewAuthTokenRequestBody builds the HTTP request body from the payload of the
// "AuthToken" endpoint of the "api" service.
func NewAuthTokenRequestBody(p *api.AuthTokenPayload) *AuthTokenRequestBody {
	body := &AuthTokenRequestBody{
		Provider:    p.Provider,
		AccessToken: p.AccessToken,
	}
	return body
}

// NewAuthTokenResultOK builds a "api" service "AuthToken" endpoint result from
// a HTTP "OK" response.
func NewAuthTokenResultOK(body *AuthTokenResponseBody) *api.AuthTokenResult {
	v := &api.AuthTokenResult{
		Token: *body.Token,
	}

	return v
}

// NewAuthTokenUnauthenticated builds a api service AuthToken endpoint
// unauthenticated error.
func NewAuthTokenUnauthenticated(body *AuthTokenUnauthenticatedResponseBody) *goa.ServiceError {
	v := &goa.ServiceError{
		Name:      *body.Name,
		ID:        *body.ID,
		Message:   *body.Message,
		Temporary: *body.Temporary,
		Timeout:   *body.Timeout,
		Fault:     *body.Fault,
	}

	return v
}

// NewAuthTokenAccessDenied builds a api service AuthToken endpoint
// access_denied error.
func NewAuthTokenAccessDenied(body *AuthTokenAccessDeniedResponseBody) *goa.ServiceError {
	v := &goa.ServiceError{
		Name:      *body.Name,
		ID:        *body.ID,
		Message:   *body.Message,
		Temporary: *body.Temporary,
		Timeout:   *body.Timeout,
		Fault:     *body.Fault,
	}

	return v
}

// NewCounterGetCounterInfoOK builds a "api" service "CounterGet" endpoint
// result from a HTTP "OK" response.
func NewCounterGetCounterInfoOK(body *CounterGetResponseBody) *apiviews.CounterInfoView {
	v := &apiviews.CounterInfoView{
		Count:           body.Count,
		LastIncrementBy: body.LastIncrementBy,
		LastIncrementAt: body.LastIncrementAt,
		NextFinalizeAt:  body.NextFinalizeAt,
	}

	return v
}

// NewCounterGetUnauthenticated builds a api service CounterGet endpoint
// unauthenticated error.
func NewCounterGetUnauthenticated(body *CounterGetUnauthenticatedResponseBody) *goa.ServiceError {
	v := &goa.ServiceError{
		Name:      *body.Name,
		ID:        *body.ID,
		Message:   *body.Message,
		Temporary: *body.Temporary,
		Timeout:   *body.Timeout,
		Fault:     *body.Fault,
	}

	return v
}

// NewCounterGetAccessDenied builds a api service CounterGet endpoint
// access_denied error.
func NewCounterGetAccessDenied(body *CounterGetAccessDeniedResponseBody) *goa.ServiceError {
	v := &goa.ServiceError{
		Name:      *body.Name,
		ID:        *body.ID,
		Message:   *body.Message,
		Temporary: *body.Temporary,
		Timeout:   *body.Timeout,
		Fault:     *body.Fault,
	}

	return v
}

// NewCounterIncrementCounterInfoAccepted builds a "api" service
// "CounterIncrement" endpoint result from a HTTP "Accepted" response.
func NewCounterIncrementCounterInfoAccepted(body *CounterIncrementResponseBody) *apiviews.CounterInfoView {
	v := &apiviews.CounterInfoView{
		Count:           body.Count,
		LastIncrementBy: body.LastIncrementBy,
		LastIncrementAt: body.LastIncrementAt,
		NextFinalizeAt:  body.NextFinalizeAt,
	}

	return v
}

// NewCounterIncrementExistingIncrementRequest builds a api service
// CounterIncrement endpoint existing_increment_request error.
func NewCounterIncrementExistingIncrementRequest(body *CounterIncrementExistingIncrementRequestResponseBody) *goa.ServiceError {
	v := &goa.ServiceError{
		Name:      *body.Name,
		ID:        *body.ID,
		Message:   *body.Message,
		Temporary: *body.Temporary,
		Timeout:   *body.Timeout,
		Fault:     *body.Fault,
	}

	return v
}

// NewCounterIncrementUnauthenticated builds a api service CounterIncrement
// endpoint unauthenticated error.
func NewCounterIncrementUnauthenticated(body *CounterIncrementUnauthenticatedResponseBody) *goa.ServiceError {
	v := &goa.ServiceError{
		Name:      *body.Name,
		ID:        *body.ID,
		Message:   *body.Message,
		Temporary: *body.Temporary,
		Timeout:   *body.Timeout,
		Fault:     *body.Fault,
	}

	return v
}

// NewCounterIncrementAccessDenied builds a api service CounterIncrement
// endpoint access_denied error.
func NewCounterIncrementAccessDenied(body *CounterIncrementAccessDeniedResponseBody) *goa.ServiceError {
	v := &goa.ServiceError{
		Name:      *body.Name,
		ID:        *body.ID,
		Message:   *body.Message,
		Temporary: *body.Temporary,
		Timeout:   *body.Timeout,
		Fault:     *body.Fault,
	}

	return v
}

// ValidateAuthTokenResponseBody runs the validations defined on
// AuthTokenResponseBody
func ValidateAuthTokenResponseBody(body *AuthTokenResponseBody) (err error) {
	if body.Token == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("token", "body"))
	}
	return
}

// ValidateAuthTokenUnauthenticatedResponseBody runs the validations defined on
// AuthToken_unauthenticated_Response_Body
func ValidateAuthTokenUnauthenticatedResponseBody(body *AuthTokenUnauthenticatedResponseBody) (err error) {
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	if body.Temporary == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("temporary", "body"))
	}
	if body.Timeout == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("timeout", "body"))
	}
	if body.Fault == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("fault", "body"))
	}
	return
}

// ValidateAuthTokenAccessDeniedResponseBody runs the validations defined on
// AuthToken_access_denied_Response_Body
func ValidateAuthTokenAccessDeniedResponseBody(body *AuthTokenAccessDeniedResponseBody) (err error) {
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	if body.Temporary == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("temporary", "body"))
	}
	if body.Timeout == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("timeout", "body"))
	}
	if body.Fault == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("fault", "body"))
	}
	return
}

// ValidateCounterGetUnauthenticatedResponseBody runs the validations defined
// on CounterGet_unauthenticated_Response_Body
func ValidateCounterGetUnauthenticatedResponseBody(body *CounterGetUnauthenticatedResponseBody) (err error) {
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	if body.Temporary == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("temporary", "body"))
	}
	if body.Timeout == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("timeout", "body"))
	}
	if body.Fault == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("fault", "body"))
	}
	return
}

// ValidateCounterGetAccessDeniedResponseBody runs the validations defined on
// CounterGet_access_denied_Response_Body
func ValidateCounterGetAccessDeniedResponseBody(body *CounterGetAccessDeniedResponseBody) (err error) {
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	if body.Temporary == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("temporary", "body"))
	}
	if body.Timeout == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("timeout", "body"))
	}
	if body.Fault == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("fault", "body"))
	}
	return
}

// ValidateCounterIncrementExistingIncrementRequestResponseBody runs the
// validations defined on
// CounterIncrement_existing_increment_request_Response_Body
func ValidateCounterIncrementExistingIncrementRequestResponseBody(body *CounterIncrementExistingIncrementRequestResponseBody) (err error) {
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	if body.Temporary == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("temporary", "body"))
	}
	if body.Timeout == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("timeout", "body"))
	}
	if body.Fault == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("fault", "body"))
	}
	return
}

// ValidateCounterIncrementUnauthenticatedResponseBody runs the validations
// defined on CounterIncrement_unauthenticated_Response_Body
func ValidateCounterIncrementUnauthenticatedResponseBody(body *CounterIncrementUnauthenticatedResponseBody) (err error) {
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	if body.Temporary == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("temporary", "body"))
	}
	if body.Timeout == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("timeout", "body"))
	}
	if body.Fault == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("fault", "body"))
	}
	return
}

// ValidateCounterIncrementAccessDeniedResponseBody runs the validations
// defined on CounterIncrement_access_denied_Response_Body
func ValidateCounterIncrementAccessDeniedResponseBody(body *CounterIncrementAccessDeniedResponseBody) (err error) {
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	if body.Temporary == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("temporary", "body"))
	}
	if body.Timeout == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("timeout", "body"))
	}
	if body.Fault == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("fault", "body"))
	}
	return
}
