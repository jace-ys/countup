// Code generated by goa v3.19.1, DO NOT EDIT.
//
// api HTTP server types
//
// Command:
// $ goa gen github.com/jace-ys/countup/api/v1 -o api/v1

package server

import (
	api "github.com/jace-ys/countup/api/v1/gen/api"
	apiviews "github.com/jace-ys/countup/api/v1/gen/api/views"
	goa "goa.design/goa/v3/pkg"
)

// CounterIncrementRequestBody is the type of the "api" service
// "CounterIncrement" endpoint HTTP request body.
type CounterIncrementRequestBody struct {
	User *string `form:"user,omitempty" json:"user,omitempty" xml:"user,omitempty"`
}

// EchoRequestBody is the type of the "api" service "Echo" endpoint HTTP
// request body.
type EchoRequestBody struct {
	Text *string `form:"text,omitempty" json:"text,omitempty" xml:"text,omitempty"`
}

// CounterGetResponseBody is the type of the "api" service "CounterGet"
// endpoint HTTP response body.
type CounterGetResponseBody struct {
	Count           int32  `form:"count" json:"count" xml:"count"`
	LastIncrementBy string `form:"last_increment_by" json:"last_increment_by" xml:"last_increment_by"`
	LastIncrementAt string `form:"last_increment_at" json:"last_increment_at" xml:"last_increment_at"`
	NextFinalizeAt  string `form:"next_finalize_at" json:"next_finalize_at" xml:"next_finalize_at"`
}

// CounterIncrementResponseBody is the type of the "api" service
// "CounterIncrement" endpoint HTTP response body.
type CounterIncrementResponseBody struct {
	Count           int32  `form:"count" json:"count" xml:"count"`
	LastIncrementBy string `form:"last_increment_by" json:"last_increment_by" xml:"last_increment_by"`
	LastIncrementAt string `form:"last_increment_at" json:"last_increment_at" xml:"last_increment_at"`
	NextFinalizeAt  string `form:"next_finalize_at" json:"next_finalize_at" xml:"next_finalize_at"`
}

// EchoResponseBody is the type of the "api" service "Echo" endpoint HTTP
// response body.
type EchoResponseBody struct {
	Text string `form:"text" json:"text" xml:"text"`
}

// CounterGetUnauthorizedResponseBody is the type of the "api" service
// "CounterGet" endpoint HTTP response body for the "unauthorized" error.
type CounterGetUnauthorizedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// CounterGetExistingIncrementRequestResponseBody is the type of the "api"
// service "CounterGet" endpoint HTTP response body for the
// "existing_increment_request" error.
type CounterGetExistingIncrementRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// CounterIncrementUnauthorizedResponseBody is the type of the "api" service
// "CounterIncrement" endpoint HTTP response body for the "unauthorized" error.
type CounterIncrementUnauthorizedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// CounterIncrementExistingIncrementRequestResponseBody is the type of the
// "api" service "CounterIncrement" endpoint HTTP response body for the
// "existing_increment_request" error.
type CounterIncrementExistingIncrementRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// EchoUnauthorizedResponseBody is the type of the "api" service "Echo"
// endpoint HTTP response body for the "unauthorized" error.
type EchoUnauthorizedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// EchoExistingIncrementRequestResponseBody is the type of the "api" service
// "Echo" endpoint HTTP response body for the "existing_increment_request"
// error.
type EchoExistingIncrementRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// NewCounterGetResponseBody builds the HTTP response body from the result of
// the "CounterGet" endpoint of the "api" service.
func NewCounterGetResponseBody(res *apiviews.CounterInfoView) *CounterGetResponseBody {
	body := &CounterGetResponseBody{
		Count:           *res.Count,
		LastIncrementBy: *res.LastIncrementBy,
		LastIncrementAt: *res.LastIncrementAt,
		NextFinalizeAt:  *res.NextFinalizeAt,
	}
	return body
}

// NewCounterIncrementResponseBody builds the HTTP response body from the
// result of the "CounterIncrement" endpoint of the "api" service.
func NewCounterIncrementResponseBody(res *apiviews.CounterInfoView) *CounterIncrementResponseBody {
	body := &CounterIncrementResponseBody{
		Count:           *res.Count,
		LastIncrementBy: *res.LastIncrementBy,
		LastIncrementAt: *res.LastIncrementAt,
		NextFinalizeAt:  *res.NextFinalizeAt,
	}
	return body
}

// NewEchoResponseBody builds the HTTP response body from the result of the
// "Echo" endpoint of the "api" service.
func NewEchoResponseBody(res *api.EchoResult) *EchoResponseBody {
	body := &EchoResponseBody{
		Text: res.Text,
	}
	return body
}

// NewCounterGetUnauthorizedResponseBody builds the HTTP response body from the
// result of the "CounterGet" endpoint of the "api" service.
func NewCounterGetUnauthorizedResponseBody(res *goa.ServiceError) *CounterGetUnauthorizedResponseBody {
	body := &CounterGetUnauthorizedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCounterGetExistingIncrementRequestResponseBody builds the HTTP response
// body from the result of the "CounterGet" endpoint of the "api" service.
func NewCounterGetExistingIncrementRequestResponseBody(res *goa.ServiceError) *CounterGetExistingIncrementRequestResponseBody {
	body := &CounterGetExistingIncrementRequestResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCounterIncrementUnauthorizedResponseBody builds the HTTP response body
// from the result of the "CounterIncrement" endpoint of the "api" service.
func NewCounterIncrementUnauthorizedResponseBody(res *goa.ServiceError) *CounterIncrementUnauthorizedResponseBody {
	body := &CounterIncrementUnauthorizedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCounterIncrementExistingIncrementRequestResponseBody builds the HTTP
// response body from the result of the "CounterIncrement" endpoint of the
// "api" service.
func NewCounterIncrementExistingIncrementRequestResponseBody(res *goa.ServiceError) *CounterIncrementExistingIncrementRequestResponseBody {
	body := &CounterIncrementExistingIncrementRequestResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewEchoUnauthorizedResponseBody builds the HTTP response body from the
// result of the "Echo" endpoint of the "api" service.
func NewEchoUnauthorizedResponseBody(res *goa.ServiceError) *EchoUnauthorizedResponseBody {
	body := &EchoUnauthorizedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewEchoExistingIncrementRequestResponseBody builds the HTTP response body
// from the result of the "Echo" endpoint of the "api" service.
func NewEchoExistingIncrementRequestResponseBody(res *goa.ServiceError) *EchoExistingIncrementRequestResponseBody {
	body := &EchoExistingIncrementRequestResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCounterIncrementPayload builds a api service CounterIncrement endpoint
// payload.
func NewCounterIncrementPayload(body *CounterIncrementRequestBody) *api.CounterIncrementPayload {
	v := &api.CounterIncrementPayload{
		User: *body.User,
	}

	return v
}

// NewEchoPayload builds a api service Echo endpoint payload.
func NewEchoPayload(body *EchoRequestBody) *api.EchoPayload {
	v := &api.EchoPayload{
		Text: *body.Text,
	}

	return v
}

// ValidateCounterIncrementRequestBody runs the validations defined on
// CounterIncrementRequestBody
func ValidateCounterIncrementRequestBody(body *CounterIncrementRequestBody) (err error) {
	if body.User == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("user", "body"))
	}
	return
}

// ValidateEchoRequestBody runs the validations defined on EchoRequestBody
func ValidateEchoRequestBody(body *EchoRequestBody) (err error) {
	if body.Text == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("text", "body"))
	}
	return
}
