// Code generated by goa v3.19.1, DO NOT EDIT.
//
// api HTTP server types
//
// Command:
// $ goa gen github.com/jace-ys/countup/api/v1 -o api/v1

package server

import (
	api "github.com/jace-ys/countup/api/v1/gen/api"
	apiviews "github.com/jace-ys/countup/api/v1/gen/api/views"
	goa "goa.design/goa/v3/pkg"
)

// AuthTokenRequestBody is the type of the "api" service "AuthToken" endpoint
// HTTP request body.
type AuthTokenRequestBody struct {
	Provider    *string `form:"provider,omitempty" json:"provider,omitempty" xml:"provider,omitempty"`
	AccessToken *string `form:"access_token,omitempty" json:"access_token,omitempty" xml:"access_token,omitempty"`
}

// AuthTokenResponseBody is the type of the "api" service "AuthToken" endpoint
// HTTP response body.
type AuthTokenResponseBody struct {
	Token string `form:"token" json:"token" xml:"token"`
}

// CounterGetResponseBody is the type of the "api" service "CounterGet"
// endpoint HTTP response body.
type CounterGetResponseBody struct {
	Count           int32  `form:"count" json:"count" xml:"count"`
	LastIncrementBy string `form:"last_increment_by" json:"last_increment_by" xml:"last_increment_by"`
	LastIncrementAt string `form:"last_increment_at" json:"last_increment_at" xml:"last_increment_at"`
	NextFinalizeAt  string `form:"next_finalize_at" json:"next_finalize_at" xml:"next_finalize_at"`
}

// CounterIncrementResponseBody is the type of the "api" service
// "CounterIncrement" endpoint HTTP response body.
type CounterIncrementResponseBody struct {
	Count           int32  `form:"count" json:"count" xml:"count"`
	LastIncrementBy string `form:"last_increment_by" json:"last_increment_by" xml:"last_increment_by"`
	LastIncrementAt string `form:"last_increment_at" json:"last_increment_at" xml:"last_increment_at"`
	NextFinalizeAt  string `form:"next_finalize_at" json:"next_finalize_at" xml:"next_finalize_at"`
}

// AuthTokenUnauthenticatedResponseBody is the type of the "api" service
// "AuthToken" endpoint HTTP response body for the "unauthenticated" error.
type AuthTokenUnauthenticatedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// AuthTokenAccessDeniedResponseBody is the type of the "api" service
// "AuthToken" endpoint HTTP response body for the "access_denied" error.
type AuthTokenAccessDeniedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// CounterGetUnauthenticatedResponseBody is the type of the "api" service
// "CounterGet" endpoint HTTP response body for the "unauthenticated" error.
type CounterGetUnauthenticatedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// CounterGetAccessDeniedResponseBody is the type of the "api" service
// "CounterGet" endpoint HTTP response body for the "access_denied" error.
type CounterGetAccessDeniedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// CounterIncrementExistingIncrementRequestResponseBody is the type of the
// "api" service "CounterIncrement" endpoint HTTP response body for the
// "existing_increment_request" error.
type CounterIncrementExistingIncrementRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// CounterIncrementUnauthenticatedResponseBody is the type of the "api" service
// "CounterIncrement" endpoint HTTP response body for the "unauthenticated"
// error.
type CounterIncrementUnauthenticatedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// CounterIncrementAccessDeniedResponseBody is the type of the "api" service
// "CounterIncrement" endpoint HTTP response body for the "access_denied" error.
type CounterIncrementAccessDeniedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// NewAuthTokenResponseBody builds the HTTP response body from the result of
// the "AuthToken" endpoint of the "api" service.
func NewAuthTokenResponseBody(res *api.AuthTokenResult) *AuthTokenResponseBody {
	body := &AuthTokenResponseBody{
		Token: res.Token,
	}
	return body
}

// NewCounterGetResponseBody builds the HTTP response body from the result of
// the "CounterGet" endpoint of the "api" service.
func NewCounterGetResponseBody(res *apiviews.CounterInfoView) *CounterGetResponseBody {
	body := &CounterGetResponseBody{
		Count:           *res.Count,
		LastIncrementBy: *res.LastIncrementBy,
		LastIncrementAt: *res.LastIncrementAt,
		NextFinalizeAt:  *res.NextFinalizeAt,
	}
	return body
}

// NewCounterIncrementResponseBody builds the HTTP response body from the
// result of the "CounterIncrement" endpoint of the "api" service.
func NewCounterIncrementResponseBody(res *apiviews.CounterInfoView) *CounterIncrementResponseBody {
	body := &CounterIncrementResponseBody{
		Count:           *res.Count,
		LastIncrementBy: *res.LastIncrementBy,
		LastIncrementAt: *res.LastIncrementAt,
		NextFinalizeAt:  *res.NextFinalizeAt,
	}
	return body
}

// NewAuthTokenUnauthenticatedResponseBody builds the HTTP response body from
// the result of the "AuthToken" endpoint of the "api" service.
func NewAuthTokenUnauthenticatedResponseBody(res *goa.ServiceError) *AuthTokenUnauthenticatedResponseBody {
	body := &AuthTokenUnauthenticatedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewAuthTokenAccessDeniedResponseBody builds the HTTP response body from the
// result of the "AuthToken" endpoint of the "api" service.
func NewAuthTokenAccessDeniedResponseBody(res *goa.ServiceError) *AuthTokenAccessDeniedResponseBody {
	body := &AuthTokenAccessDeniedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCounterGetUnauthenticatedResponseBody builds the HTTP response body from
// the result of the "CounterGet" endpoint of the "api" service.
func NewCounterGetUnauthenticatedResponseBody(res *goa.ServiceError) *CounterGetUnauthenticatedResponseBody {
	body := &CounterGetUnauthenticatedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCounterGetAccessDeniedResponseBody builds the HTTP response body from the
// result of the "CounterGet" endpoint of the "api" service.
func NewCounterGetAccessDeniedResponseBody(res *goa.ServiceError) *CounterGetAccessDeniedResponseBody {
	body := &CounterGetAccessDeniedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCounterIncrementExistingIncrementRequestResponseBody builds the HTTP
// response body from the result of the "CounterIncrement" endpoint of the
// "api" service.
func NewCounterIncrementExistingIncrementRequestResponseBody(res *goa.ServiceError) *CounterIncrementExistingIncrementRequestResponseBody {
	body := &CounterIncrementExistingIncrementRequestResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCounterIncrementUnauthenticatedResponseBody builds the HTTP response body
// from the result of the "CounterIncrement" endpoint of the "api" service.
func NewCounterIncrementUnauthenticatedResponseBody(res *goa.ServiceError) *CounterIncrementUnauthenticatedResponseBody {
	body := &CounterIncrementUnauthenticatedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCounterIncrementAccessDeniedResponseBody builds the HTTP response body
// from the result of the "CounterIncrement" endpoint of the "api" service.
func NewCounterIncrementAccessDeniedResponseBody(res *goa.ServiceError) *CounterIncrementAccessDeniedResponseBody {
	body := &CounterIncrementAccessDeniedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewAuthTokenPayload builds a api service AuthToken endpoint payload.
func NewAuthTokenPayload(body *AuthTokenRequestBody) *api.AuthTokenPayload {
	v := &api.AuthTokenPayload{
		Provider:    *body.Provider,
		AccessToken: *body.AccessToken,
	}

	return v
}

// NewCounterIncrementPayload builds a api service CounterIncrement endpoint
// payload.
func NewCounterIncrementPayload(token *string) *api.CounterIncrementPayload {
	v := &api.CounterIncrementPayload{}
	v.Token = token

	return v
}

// ValidateAuthTokenRequestBody runs the validations defined on
// AuthTokenRequestBody
func ValidateAuthTokenRequestBody(body *AuthTokenRequestBody) (err error) {
	if body.Provider == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("provider", "body"))
	}
	if body.AccessToken == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("access_token", "body"))
	}
	if body.Provider != nil {
		if !(*body.Provider == "google") {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.provider", *body.Provider, []any{"google"}))
		}
	}
	return
}
