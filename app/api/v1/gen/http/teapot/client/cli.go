// Code generated by goa v3.19.1, DO NOT EDIT.
//
// teapot HTTP client CLI support package
//
// Command:
// $ goa gen github.com/jace-ys/countup/api/v1 -o api/v1

package client

import (
	"encoding/json"
	"fmt"

	teapot "github.com/jace-ys/countup/api/v1/gen/teapot"
)

// BuildEchoPayload builds the payload for the teapot Echo endpoint from CLI
// flags.
func BuildEchoPayload(teapotEchoBody string) (*teapot.EchoPayload, error) {
	var err error
	var body EchoRequestBody
	{
		err = json.Unmarshal([]byte(teapotEchoBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"text\": \"Tempora repellendus.\"\n   }'")
		}
	}
	v := &teapot.EchoPayload{
		Text: body.Text,
	}

	return v, nil
}
